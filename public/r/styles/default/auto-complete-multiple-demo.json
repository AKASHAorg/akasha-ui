{
  "name": "auto-complete-multiple-demo",
  "type": "registry:example",
  "registryDependencies": [
    "auto-complete"
  ],
  "files": [
    {
      "path": "examples/auto-complete-multiple-demo.tsx",
      "content": "\"use client\";\n\nimport { useRef, useState } from \"react\";\nimport { X } from \"lucide-react\";\n\nimport {\n  AutoComplete,\n  type AutoCompleteRef,\n  type Option,\n} from \"@/registry/default/akasha-ui/auto-complete\";\nimport { Badge } from \"@/registry/default/ui/badge\";\nimport { Button } from \"@/registry/default/ui/button\";\n\n// Sample data for demonstrations\nconst frameworks = [\n  { value: \"next\", label: \"Next.js\" },\n  { value: \"sveltekit\", label: \"SvelteKit\" },\n  { value: \"nuxt\", label: \"Nuxt.js\" },\n  { value: \"remix\", label: \"Remix\" },\n  { value: \"astro\", label: \"Astro\" },\n  { value: \"wordpress\", label: \"WordPress\" },\n  { value: \"express\", label: \"Express.js\" },\n  { value: \"nest\", label: \"Nest.js\" },\n];\n\nexport default function AutoCompleteMultipleDemo() {\n  const autoCompleteRef = useRef<AutoCompleteRef>(null);\n  const [selected, setSelected] = useState<Option[]>([]);\n\n  const handleValueChange = (value: Option | Option[]) => {\n    if (Array.isArray(value)) {\n      setSelected(value);\n    }\n  };\n\n  const handleDeselect = (option: Option) => {\n    autoCompleteRef.current?.deselectOption(option);\n  };\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <p className=\"text-sm text-muted-foreground\">\n        Multiple selection with external deselect:\n      </p>\n\n      <div className=\"flex flex-col gap-4\">\n        <AutoComplete\n          ref={autoCompleteRef}\n          options={frameworks}\n          placeholder=\"Select frameworks...\"\n          emptyMessage=\"No framework found.\"\n          multiple\n          value={selected}\n          onValueChange={handleValueChange}\n        />\n\n        <div className=\"flex flex-wrap gap-2\">\n          {selected.map((option) => (\n            <Badge key={option.value} variant=\"secondary\">\n              {option.label}\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"ml-1 h-auto p-0 hover:bg-transparent\"\n                onClick={() => handleDeselect(option)}\n              >\n                <X className=\"h-3 w-3\" />\n                <span className=\"sr-only\">Remove {option.label}</span>\n              </Button>\n            </Badge>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}