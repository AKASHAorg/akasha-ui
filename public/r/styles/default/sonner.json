{
  "name": "sonner",
  "type": "registry:ui",
  "dependencies": [
    "sonner",
    "next-themes"
  ],
  "files": [
    {
      "path": "ui/sonner.tsx",
      "content": "\"use client\";\n\nimport { CircleAlert, CircleCheck, CircleX, TriangleAlert } from \"lucide-react\";\nimport { useTheme } from \"next-themes\";\nimport { Toaster as Sonner } from \"sonner\";\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>;\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme();\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg [&_svg]:size-4\",\n          description: \"group-[.toast]:text-muted-foreground\",\n          icon: \"self-start\",\n          content: \"-mt-1\",\n          actionButton:\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary h-10\",\n          cancelButton:\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground h-10\",\n        },\n      }}\n      icons={{\n        info: <CircleAlert className=\"text-primary\" />,\n        success: <CircleCheck className=\"text-success\" />,\n        warning: <TriangleAlert className=\"text-warning\" />,\n        error: <CircleX className=\"text-destructive\" />,\n      }}\n      {...props}\n    />\n  );\n};\n\nexport { Toaster };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}