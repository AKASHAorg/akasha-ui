{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "post-page",
  "type": "registry:block",
  "description": "A simple sidebar with navigation grouped by section.",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "https://akasha-ui.pages.dev/r/styles/default/profile-avatar-button.json",
    "https://akasha-ui.pages.dev/r/styles/default/card.json",
    "https://akasha-ui.pages.dev/r/styles/default/stack.json",
    "https://akasha-ui.pages.dev/r/styles/default/typography.json",
    "https://akasha-ui.pages.dev/r/styles/default/icon-container.json",
    "https://akasha-ui.pages.dev/r/styles/default/button.json"
  ],
  "files": [
    {
      "path": "blocks/post-page/page.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\n\nimport { ContentCard } from \"@/registry/default/blocks/content-card\";\nimport { Card } from \"@/registry/default/ui/card\";\nimport {\n  InfiniteScroll,\n  InfiniteScrollList,\n} from \"@/registry/default/ui/infinite-scroll\";\n\nimport { ReplyCard } from \"../reply-card\";\nimport { POST, REPLY_1, REPLY_2, REPLY_3 } from \"./mock-data\";\nimport { ReplyEditor } from \"./reply-editor\";\n\nexport default function Page() {\n  const ROWS = [\n    <ContentCard\n      key={0}\n      {...POST}\n      onRepliesClick={() => {\n        console.log(\"Not implemented\");\n      }}\n      className=\"rounded-b-none\"\n    />,\n    <Card className=\"border-y-0 p-2 rounded-none\" key={1}>\n      <ReplyEditor\n        avatarSrc={\"https://github.com/akashaorg.png\"}\n        onReplyClick={() => {\n          console.log(\"Not implemented\");\n        }}\n      />\n    </Card>,\n    <ReplyCard {...REPLY_1} key={2} />,\n    <ReplyCard {...REPLY_2} key={3} />,\n    <ContentCard {...REPLY_3} className=\"rounded-t-none\" key={4} />,\n  ];\n  return (\n    <div className=\"p-4 h-full\">\n      <InfiniteScroll\n        count={ROWS.length}\n        estimatedHeight={220}\n        overScan={5}\n        gap={0}\n        loading={false}\n        hasNextPage={false}\n        scrollElementType=\"window\"\n      >\n        <InfiniteScrollList>\n          {(index) => {\n            return ROWS[index];\n          }}\n        </InfiniteScrollList>\n      </InfiniteScroll>\n    </div>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/dashboard/page.tsx"
    },
    {
      "path": "blocks/content-card.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { MessageCircle, SatelliteDish } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\nimport { NsfwWarning } from \"@/registry/default/blocks/nsfw-warning\";\nimport { Badge } from \"@/registry/default/ui/badge\";\nimport { Button } from \"@/registry/default/ui/button\";\nimport { Card } from \"@/registry/default/ui/card\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuTrigger,\n} from \"@/registry/default/ui/dropdown-menu\";\nimport { IconContainer } from \"@/registry/default/ui/icon-container\";\nimport {\n  ProfileAvatarButton,\n  ProfileAvatarButtonAvatar,\n  ProfileAvatarButtonAvatarFallback,\n  ProfileAvatarButtonAvatarImage,\n  ProfileDidField,\n  ProfileName,\n} from \"@/registry/default/ui/profile-avatar-button\";\nimport { Stack } from \"@/registry/default/ui/stack\";\nimport { Typography } from \"@/registry/default/ui/typography\";\n\ninterface ContentCardProps {\n  author: {\n    did: string;\n    avatarSrc: string;\n    name: string;\n  };\n  publishedAt: string;\n  repliesCount: number;\n  publishedVia?: string;\n  menu?: {\n    trigger: React.ReactNode;\n    items: React.ReactNode[];\n  };\n  tags?: string[];\n  variant?: \"feed\" | \"page\";\n  nsfw?: boolean;\n  className?: string;\n  children: React.ReactNode;\n  onRepliesClick?: () => void;\n}\n\nconst ContentCard = ({\n  author,\n  publishedAt,\n  tags,\n  publishedVia,\n  repliesCount,\n  className,\n  nsfw,\n  menu,\n  children,\n  onRepliesClick,\n}: ContentCardProps) => {\n  const [showNsfw, setShowNsfw] = React.useState(nsfw);\n\n  return (\n    <Card className={cn(\"p-4\", className)}>\n      <Stack direction=\"column\" spacing={4}>\n        <Stack direction=\"row\" justifyContent={\"between\"}>\n          <ProfileAvatarButton profileDID={author.did}>\n            <ProfileAvatarButtonAvatar>\n              <ProfileAvatarButtonAvatarImage\n                src={author.avatarSrc}\n                alt={`@${author.name}`}\n              />\n              <ProfileAvatarButtonAvatarFallback />\n            </ProfileAvatarButtonAvatar>\n            <ProfileName>\n              {author.name}{\" \"}\n              <Typography\n                variant=\"xs\"\n                className=\"text-muted-foreground font-normal\"\n              >\n                Â· {publishedAt}\n              </Typography>\n            </ProfileName>\n            <ProfileDidField />\n          </ProfileAvatarButton>\n          {menu && (\n            <DropdownMenu>\n              <DropdownMenuTrigger>{menu.trigger}</DropdownMenuTrigger>\n              <DropdownMenuContent>{menu.items}</DropdownMenuContent>\n            </DropdownMenu>\n          )}\n        </Stack>\n\n        {showNsfw ? (\n          <NsfwWarning\n            onShowClick={() => setShowNsfw(!showNsfw)}\n            title=\"Content Warning: Not Safe Work\"\n            description=\"The post author marked this post as NSFW\"\n          />\n        ) : (\n          children\n        )}\n\n        {tags && (\n          <Stack direction=\"row\" spacing={2}>\n            {tags.map((tag, index) => (\n              <Badge key={index} variant=\"outline\" className=\"border-secondary\">\n                <Typography variant=\"xs\" className=\"font-normal\">\n                  {tag}\n                </Typography>\n              </Badge>\n            ))}\n          </Stack>\n        )}\n        <Stack direction=\"row\" spacing={2} justifyContent=\"between\">\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n            {publishedVia && (\n              <>\n                <IconContainer size=\"xs\" variant=\"round\">\n                  <SatelliteDish className=\"text-primary\" size={12} />\n                </IconContainer>\n\n                <Typography variant=\"xs\" className=\"text-muted-foreground\">\n                  Published via {publishedVia}\n                </Typography>\n              </>\n            )}\n          </Stack>\n\n          <Button\n            asChild\n            onClick={onRepliesClick}\n            className=\"border-none bg-transparent pr-0\"\n          >\n            <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n              <MessageCircle size={16} className=\"text-primary\" />\n              {repliesCount > 0 && (\n                <Typography variant=\"xs\" className=\"font-bold text-primary\">\n                  {repliesCount}\n                </Typography>\n              )}\n            </Stack>\n          </Button>\n        </Stack>\n      </Stack>\n    </Card>\n  );\n};\n\nexport { ContentCard };\n",
      "type": "registry:component"
    },
    {
      "path": "blocks/reply-card.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\n\nimport { ContentCard } from \"./content-card\";\n\ninterface ReplyCardProps extends React.ComponentProps<typeof ContentCard> {\n  replies?: React.ComponentProps<typeof ContentCard>[];\n}\n\nconst ReplyCard = ({ replies, ...props }: ReplyCardProps) => {\n  return (\n    <>\n      <ContentCard\n        {...props}\n        className=\"rounded-b-none border-b-0 rounded-t-none\"\n      />\n      {replies && (\n        <div className=\"border-x border-border pl-8 pb-2 bg-card\">\n          {/* Reply previews */}\n          <div className=\"border-l border-primary\">\n            {replies?.map((reply, index) => (\n              <ContentCard\n                {...reply}\n                onRepliesClick={() => {\n                  console.log(\"Clicked on replies button\");\n                }}\n                className=\"rounded-none border-x-0 border-l border-y-0\"\n                key={index}\n              />\n            ))}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport { ReplyCard };\n",
      "type": "registry:component"
    },
    {
      "path": "blocks/nsfw-warning.tsx",
      "content": "import * as React from \"react\";\nimport { EyeOff } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/registry/default/ui/button\";\nimport { Card } from \"@/registry/default/ui/card\";\nimport { Stack } from \"@/registry/default/ui/stack\";\nimport { Typography } from \"@/registry/default/ui/typography\";\n\nconst NsfwWarning = ({\n  className,\n  title,\n  description,\n  onShowClick,\n  ...props\n}: React.ComponentProps<typeof Card> & {\n  title: string;\n  description: string;\n  onShowClick?: () => void;\n}) => {\n  return (\n    <Card\n      className={cn(\"border-border pb-0 bg-nested-card\", className)}\n      {...props}\n    >\n      <Stack direction=\"column\" spacing={2} alignItems=\"center\">\n        <EyeOff size={20} className=\"text-destructive\" />\n        <Typography variant=\"sm\" className=\"font-bold\">\n          {title}\n        </Typography>\n        <Typography variant=\"sm\">{description}</Typography>\n        <Button variant=\"link\" className=\"px-8\" onClick={onShowClick}>\n          Show\n        </Button>\n      </Stack>\n    </Card>\n  );\n};\n\nexport { NsfwWarning };\n",
      "type": "registry:component"
    },
    {
      "path": "blocks/post-page/reply-editor.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\n\nimport { Button } from \"@/registry/default/ui/button\";\nimport { Stack } from \"@/registry/default/ui/stack\";\nimport { Textarea } from \"@/registry/default/ui/textarea\";\n\nimport {\n  ProfileAvatar,\n  ProfileAvatarFallback,\n  ProfileAvatarImage,\n} from \"../../ui/profile-avatar\";\n\ninterface ReplyEditorProps {\n  onReplyClick?: (content: string) => void;\n  avatarSrc: string;\n}\n\nfunction ReplyEditor({ onReplyClick, avatarSrc }: ReplyEditorProps) {\n  const [content, setContent] = React.useState(\"\");\n\n  const handleReplyClick = () => {\n    if (content.trim() && onReplyClick) {\n      onReplyClick(content);\n      setContent(\"\");\n    }\n  };\n\n  return (\n    <Stack direction=\"column\" spacing={4} className=\"w-full relative\">\n      <Textarea\n        placeholder=\"My thoughts on this are...\"\n        value={content}\n        onChange={(e) => setContent(e.target.value)}\n        rows={1}\n        className=\"pl-12 pr-24 h-8 py-5 focus:min-h-[90px] overflow-auto resize-none transition-all duration-200\"\n      />\n      <ProfileAvatar className=\"absolute top-4 left-2\" size=\"md\">\n        <ProfileAvatarImage src={avatarSrc} />\n        <ProfileAvatarFallback />\n      </ProfileAvatar>\n      <Button\n        onClick={handleReplyClick}\n        disabled={!content.trim()}\n        className=\"absolute bottom-3 right-2\"\n      >\n        Reply\n      </Button>\n    </Stack>\n  );\n}\n\nexport { ReplyEditor };\n",
      "type": "registry:component"
    },
    {
      "path": "blocks/post-page/mock-data.tsx",
      "content": "import * as React from \"react\";\nimport { Ellipsis } from \"lucide-react\";\n\nimport { ContentCard } from \"@/registry/default/blocks/content-card\";\nimport {\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n} from \"@/registry/default/ui/dropdown-menu\";\n\nimport { ReplyCard } from \"../reply-card\";\n\nconst MENU = {\n  trigger: (\n    <Ellipsis\n      size={20}\n      className=\"text-primary cursor-pointer hover:text-muted-foreground\"\n    />\n  ),\n  items: [\n    <DropdownMenuItem key=\"flag\"> Flag </DropdownMenuItem>,\n    <DropdownMenuItem key=\"delete\"> Delete </DropdownMenuItem>,\n    <DropdownMenuSeparator key=\"separator\" />,\n    <DropdownMenuItem key=\"edit\"> Edit </DropdownMenuItem>,\n  ],\n};\n\nconst POST: React.ComponentProps<typeof ContentCard> = {\n  author: {\n    did: \"did:pkh:eip155:11155111:0x8a022905463998860516390fb27548479a098b95\",\n    avatarSrc: \"https://github.com/akashaorg.png\",\n    name: \"CoffeeLover\",\n  },\n  children: (\n    <>\n      Hello, my name is Tobi, and I Love coffee.I drink about 5 cups of coffee\n      per day.\n    </>\n  ),\n  publishedAt: \"1h ago\",\n  tags: [\"AKASHA\", \"Coffee\"],\n  publishedVia: \"Antenna\",\n  repliesCount: 5,\n  nsfw: false,\n  menu: MENU,\n};\n\nconst REPLY_1: React.ComponentProps<typeof ContentCard> = {\n  author: {\n    did: \"did:pkh:eip155:11155111:0x8a022905463998860516390fb27548479a098b95\",\n    avatarSrc: \"https://github.com/akashaorg.png\",\n    name: \"TeddythePug\",\n  },\n  children: (\n    <>\n      Tobi, youâre not drinking coffeeâyouâre fueling a NASA rocket launch. ðâï¸\n    </>\n  ),\n  publishedAt: \"45 mins ago\",\n  repliesCount: 0,\n  nsfw: false,\n  menu: MENU,\n};\n\nconst REPLIES_TO_REPLY_2 = [\n  {\n    author: {\n      did: \"did:pkh:eip155:11155111:0x8a022905463998860516390fb27548479a098b95\",\n      avatarSrc: \"https://github.com/akashaorg.png\",\n      name: \"CoffeeLover\",\n    },\n    children: <>Haha very funny.</>,\n    publishedAt: \"5 mins ago\",\n    nsfw: false,\n    menu: MENU,\n    repliesCount: 0,\n  },\n  {\n    author: {\n      did: \"did:pkh:eip155:11155111:0x8a022905463998860516390fb27548479a098b95\",\n      avatarSrc: \"https://github.com/akashaorg.png\",\n      name: \"CoffeeLover\",\n    },\n    children: <> At this point, coffee and I are practically married ð</>,\n    publishedAt: \"5 mins ago\",\n    nsfw: false,\n    menu: MENU,\n    repliesCount: 0,\n  },\n];\n\nconst REPLY_2: React.ComponentProps<typeof ReplyCard> = {\n  author: {\n    did: \"did:pkh:eip155:11155111:0x8a022905463998860516390fb27548479a098b95\",\n    avatarSrc: \"https://github.com/akashaorg.png\",\n    name: \"HangryMeow\",\n  },\n  children: (\n    <>\n      5 cups a day? Thatâs not a coffee habit, thatâs a legally binding\n      relationship. Do you and coffee have anniversary plans? ð\n    </>\n  ),\n  publishedAt: \"30 mins ago\",\n  repliesCount: REPLIES_TO_REPLY_2.length,\n  nsfw: false,\n  menu: MENU,\n  replies: REPLIES_TO_REPLY_2,\n};\n\nconst REPLY_3: React.ComponentProps<typeof ReplyCard> = {\n  author: {\n    did: \"did:pkh:eip155:11155111:0x8a022905463998860516390fb27548479a098b95\",\n    avatarSrc: \"https://github.com/akashaorg.png\",\n    name: \"HangryMeow\",\n  },\n  children: <>This is NSFW.</>,\n  publishedAt: \"30 mins ago\",\n  repliesCount: 1,\n  nsfw: true,\n  menu: MENU,\n};\n\nexport { POST, REPLY_1, REPLY_2, REPLY_3 };\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "post-page"
  ]
}