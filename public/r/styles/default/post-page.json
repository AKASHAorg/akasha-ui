{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "post-page",
  "type": "registry:block",
  "description": "A simple sidebar with navigation grouped by section.",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "https://akasha-ui.pages.dev/r/styles/default/profile-avatar-button.json",
    "https://akasha-ui.pages.dev/r/styles/default/card.json",
    "https://akasha-ui.pages.dev/r/styles/default/stack.json",
    "https://akasha-ui.pages.dev/r/styles/default/typography.json",
    "https://akasha-ui.pages.dev/r/styles/default/icon-container.json",
    "https://akasha-ui.pages.dev/r/styles/default/button.json"
  ],
  "files": [
    {
      "path": "blocks/post-page/page.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Ellipsis } from \"lucide-react\";\n\nimport ContentCard, {\n  ContentCardProps,\n} from \"@/registry/default/blocks/content-card\";\nimport {\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n} from \"@/registry/default/ui/dropdown-menu\";\n\nconst POST_MOCK_DATA: ContentCardProps = {\n  author: {\n    did: \"did:pkh:eip155:11155111:0x8a022905463998860516390fb27548479a098b95\",\n    avatarSrc: \"https://github.com/akashaorg.png\",\n    name: \"CoffeeLover\",\n  },\n  children: (\n    <>\n      &quot;Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam,\n      quos.&quot;\n    </>\n  ),\n  publishedAt: \"5 mins ago\",\n  tags: [\"AKASHA\", \"WEB3\"],\n  publishedVia: \"Antenna\",\n  repliesCount: 5,\n  nsfw: false,\n  menu: {\n    trigger: (\n      <Ellipsis\n        size={20}\n        className=\"text-primary cursor-pointer hover:text-muted-foreground\"\n      />\n    ),\n    items: [\n      <DropdownMenuItem key=\"flag\">Flag</DropdownMenuItem>,\n      <DropdownMenuItem key=\"delete\">Delete</DropdownMenuItem>,\n      <DropdownMenuSeparator key=\"separator\" />,\n      <DropdownMenuItem key=\"edit\">Edit</DropdownMenuItem>,\n    ],\n  },\n};\n\nexport default function Page() {\n  return (\n    <div className=\"p-4\">\n      <ContentCard\n        {...POST_MOCK_DATA}\n        onRepliesButtonClick={() => {\n          console.log(\"Clicked on replies button\");\n        }}\n      />\n    </div>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/dashboard/page.tsx"
    },
    {
      "path": "blocks/content-card.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { MessageCircle, SatelliteDish } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\nimport NsfwWarning from \"@/registry/default/blocks/nsfw-warning\";\nimport { Badge } from \"@/registry/default/ui/badge\";\nimport { Button } from \"@/registry/default/ui/button\";\nimport { Card } from \"@/registry/default/ui/card\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuTrigger,\n} from \"@/registry/default/ui/dropdown-menu\";\nimport { IconContainer } from \"@/registry/default/ui/icon-container\";\nimport {\n  ProfileAvatarButton,\n  ProfileAvatarButtonAvatar,\n  ProfileAvatarButtonAvatarFallback,\n  ProfileAvatarButtonAvatarImage,\n  ProfileDidField,\n  ProfileName,\n} from \"@/registry/default/ui/profile-avatar-button\";\nimport { Stack } from \"@/registry/default/ui/stack\";\nimport { Typography } from \"@/registry/default/ui/typography\";\n\nexport interface ContentCardProps {\n  author: {\n    did: string;\n    avatarSrc: string;\n    name: string;\n  };\n  publishedAt: string;\n  publishedVia: string;\n  repliesCount: number;\n  menu?: {\n    trigger: React.ReactNode;\n    items: React.ReactNode[];\n  };\n  tags?: string[];\n  variant?: \"feed\" | \"page\";\n  nsfw?: boolean;\n  className?: string;\n  children: React.ReactNode;\n  onRepliesButtonClick?: () => void;\n}\n\nconst ContentCard = ({\n  author,\n  publishedAt,\n  tags,\n  publishedVia,\n  repliesCount,\n  className,\n  nsfw,\n  menu,\n  children,\n  onRepliesButtonClick,\n}: ContentCardProps) => {\n  const [showNsfw, setShowNsfw] = React.useState(nsfw);\n\n  return (\n    <Card className={cn(\"p-4\", className)}>\n      <Stack direction=\"column\" spacing={4}>\n        <Stack direction=\"row\" justifyContent={\"between\"}>\n          <ProfileAvatarButton profileDID={author.did}>\n            <ProfileAvatarButtonAvatar>\n              <ProfileAvatarButtonAvatarImage\n                src={author.avatarSrc}\n                alt={`@${author.name}`}\n              />\n              <ProfileAvatarButtonAvatarFallback />\n            </ProfileAvatarButtonAvatar>\n            <ProfileName>\n              {author.name}{\" \"}\n              <Typography\n                variant=\"xs\"\n                className=\"text-muted-foreground font-normal\"\n              >\n                Â· {publishedAt}\n              </Typography>\n            </ProfileName>\n            <ProfileDidField />\n          </ProfileAvatarButton>\n          {menu && (\n            <DropdownMenu>\n              <DropdownMenuTrigger>{menu.trigger}</DropdownMenuTrigger>\n              <DropdownMenuContent>{menu.items}</DropdownMenuContent>\n            </DropdownMenu>\n          )}\n        </Stack>\n\n        {showNsfw ? (\n          <NsfwWarning onShowClick={() => setShowNsfw(!showNsfw)} />\n        ) : (\n          children\n        )}\n\n        {tags && (\n          <Stack direction=\"row\" spacing={2}>\n            {tags.map((tag, index) => (\n              <Badge key={index} variant=\"outline\" className=\"border-secondary\">\n                <Typography variant=\"xs\" className=\"font-normal\">\n                  {tag}\n                </Typography>\n              </Badge>\n            ))}\n          </Stack>\n        )}\n        <Stack direction=\"row\" spacing={2} justifyContent=\"between\">\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n            <IconContainer size=\"xs\" variant=\"round\">\n              <SatelliteDish className=\"text-primary\" size={12} />\n            </IconContainer>\n            <Typography variant=\"xs\" className=\"text-muted-foreground\">\n              Published via {publishedVia}\n            </Typography>\n          </Stack>\n\n          <Button\n            asChild\n            onClick={onRepliesButtonClick}\n            className=\"border-none bg-transparent pr-0\"\n          >\n            <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n              <MessageCircle size={16} className=\"text-primary\" />\n              <Typography variant=\"xs\" className=\"font-bold text-primary\">\n                {repliesCount}\n              </Typography>\n            </Stack>\n          </Button>\n        </Stack>\n      </Stack>\n    </Card>\n  );\n};\n\nexport default ContentCard;\n",
      "type": "registry:component"
    },
    {
      "path": "blocks/nsfw-warning.tsx",
      "content": "import * as React from \"react\";\nimport { EyeOff } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/registry/default/ui/button\";\nimport { Card } from \"@/registry/default/ui/card\";\nimport { Stack } from \"@/registry/default/ui/stack\";\nimport { Typography } from \"@/registry/default/ui/typography\";\n\nconst NsfwWarning = ({\n  className,\n  onShowClick,\n  ...props\n}: React.ComponentProps<typeof Card> & {\n  onShowClick?: () => void;\n}) => {\n  return (\n    <Card\n      className={cn(\"border-border pb-0 bg-nested-card\", className)}\n      {...props}\n    >\n      <Stack direction=\"column\" spacing={2} alignItems=\"center\">\n        <EyeOff size={20} className=\"text-destructive\" />\n        <Typography variant=\"sm\" className=\"font-bold\">\n          Content Warning: Not Safe Work\n        </Typography>\n        <Typography variant=\"sm\">\n          The post author marked this post as NSFW\n        </Typography>\n        <Button variant=\"link\" className=\"px-8\" onClick={onShowClick}>\n          Show\n        </Button>\n      </Stack>\n    </Card>\n  );\n};\n\nexport default NsfwWarning;\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "post-page"
  ]
}