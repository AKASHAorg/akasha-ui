{
  "name": "icon-container",
  "type": "registry:ui",
  "dependencies": [],
  "files": [
    {
      "path": "akasha-ui/icon-container.tsx",
      "content": "import * as React from \"react\";\nimport { VariantProps, cva } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst iconContainerStyles = cva(\n  \"flex items-center justify-center relative bg-muted\",\n  {\n    variants: {\n      variant: {\n        square: \"\",\n        round: \"\",\n      },\n      size: {\n        lg: \"\",\n        md: \"\",\n        sm: \"\",\n        xs: \"\",\n      },\n    },\n    compoundVariants: [\n      {\n        variant: \"square\",\n        size: \"lg\",\n        class: \"size-28 [&_svg]:size-10 rounded-3xl\",\n      },\n      {\n        variant: \"square\",\n        size: \"md\",\n        class: \"size-14 [&_svg]:size-6 rounded-2xl\",\n      },\n      {\n        variant: \"square\",\n        size: \"sm\",\n        class: \"size-10 [&_svg]:size-5 rounded-xl\",\n      },\n      {\n        variant: \"round\",\n        size: \"lg\",\n        class: \"size-12 [&_svg]:size-6 rounded-full\",\n      },\n      {\n        variant: \"round\",\n        size: \"md\",\n        class: \"size-10 [&_svg]:size-5 rounded-full\",\n      },\n      {\n        variant: \"round\",\n        size: \"sm\",\n        class: \"size-8 [&_svg]:size-4 rounded-full\",\n      },\n      {\n        variant: \"round\",\n        size: \"xs\",\n        class: \"size-5 [&_svg]:size-3 rounded-full\",\n      },\n    ],\n    defaultVariants: {\n      variant: \"round\",\n      size: \"md\",\n    },\n  }\n);\n\nexport interface IconContainerProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof iconContainerStyles> {\n  showNotificationDot?: boolean; // If true, show the notification dot\n}\n\nconst IconContainer = React.forwardRef<HTMLDivElement, IconContainerProps>(\n  (\n    {\n      variant,\n      size,\n      className,\n      showNotificationDot = false,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <div\n        ref={ref}\n        className={iconContainerStyles({ variant, size, className })}\n        {...props}\n      >\n        {children}\n        {showNotificationDot && (\n          <div\n            className={cn(\n              \"absolute rounded-full w-3 h-3 bg-orange-500 top-0 right-0\"\n            )}\n          />\n        )}\n      </div>\n    );\n  }\n);\nIconContainer.displayName = \"IconContainer\";\n\nexport { IconContainer };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}