{
  "name": "icon-container",
  "type": "registry:ui",
  "dependencies": [],
  "files": [
    {
      "path": "akasha-ui/icon-container.tsx",
      "content": "import React from \"react\"\nimport { VariantProps, cva } from \"class-variance-authority\"\n\nconst iconContainerStyles = cva(\n  \"flex items-center justify-center relative bg-secondary\",\n  {\n    variants: {\n      variant: {\n        squareLarge: \"w-28 h-28 rounded-3xl text-3xl\", // 112px\n        squareMedium: \"w-14 h-14 rounded-2xl text-lg\", // 56px\n        squareSmall: \"w-10 h-10 rounded-xl text-base\", // 40px\n        roundLarge: \"w-12 h-12 rounded-full text-lg\", // 48px\n        roundMedium: \"w-10 h-10 rounded-full text-base\", // 40px\n        roundSmall: \"w-8 h-8 rounded-full text-sm\", // 32px\n        roundExtraSmall: \"w-5 h-5 rounded-full text-xs\", // 20px\n      },\n    },\n    defaultVariants: {\n      variant: \"squareMedium\",\n    },\n  }\n)\n\nconst badgeStyles = cva(\"absolute rounded-full w-3 h-3 bg-orange-600\", {\n  variants: {\n    position: {\n      topRight: \"top-0 right-0\",\n      topLeft: \"top-0 left-0\",\n      bottomRight: \"bottom-0 right-0\",\n      bottomLeft: \"bottom-0 left-0\",\n    },\n  },\n  defaultVariants: {\n    position: \"topRight\",\n  },\n})\n\nexport interface IconContainerProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof iconContainerStyles> {\n  children: React.ReactNode\n  badge?: boolean // If true, show the badge\n  badgePosition?: \"topRight\" | \"topLeft\" | \"bottomRight\" | \"bottomLeft\" // Badge position\n}\n\nconst IconContainer: React.FC<IconContainerProps> = ({\n  variant,\n  className,\n  children,\n  badge = false,\n  badgePosition = \"topRight\",\n  ...props\n}) => {\n  return (\n    <div className={iconContainerStyles({ variant, className })} {...props}>\n      {children}\n      {badge && <div className={badgeStyles({ position: badgePosition })} />}\n    </div>\n  )\n}\n\nexport default IconContainer\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}