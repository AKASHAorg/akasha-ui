{
  "name": "error-loader",
  "type": "registry:ui",
  "files": [
    {
      "path": "akasha-ui/error-loader.tsx",
      "content": "import React, { ComponentProps, ReactNode, isValidElement } from \"react\";\n\nimport { Button, ButtonProps } from \"@/registry/default/akasha-ui/button\";\nimport {\n  Image,\n  ImageFallback,\n  ImageRoot,\n} from \"@/registry/default/akasha-ui/image\";\n\nimport { cn } from \"../lib/utils\";\nimport { Card, CardContent, CardFooter, CardTitle } from \"../ui/card\";\nimport { Typography } from \"./typography\";\n\nexport default function ErrorLoader({\n  title,\n  message,\n  children,\n}: {\n  title: string;\n  message: string;\n  children?: ReactNode;\n}) {\n  let cardButton: ReactNode | null = null;\n  let cardImage: ReactNode | null = null;\n\n  React.Children.forEach(children, (child) => {\n    if (isValidElement(child)) {\n      if (child.type === ErrorLoaderButton) {\n        if (cardButton) {\n          throw new Error(\"Only one CardButton is allowed\");\n        }\n        cardButton = child;\n      } else if (child.type === ErrorLoaderImage) {\n        if (cardImage) {\n          throw new Error(\"Only one CardImage is allowed\");\n        }\n        cardImage = child;\n      } else {\n        throw new Error(\"Invalid child type\");\n      }\n    }\n  });\n\n  return (\n    <Card className=\"w-[348px] py-5 flex flex-col items-center justify-center rounded-3xl\">\n      <ImageRoot>\n        {cardImage}\n        <ImageFallback>Failed to load image</ImageFallback>\n      </ImageRoot>\n\n      <CardTitle className=\"flex flex-col items-center justify-center mt-4 mb-2\">\n        <Typography variant=\"h5\">{title}</Typography>\n      </CardTitle>\n\n      <CardContent className=\"flex flex-col items-center justify-center pb-0\">\n        <Typography variant=\"xs\" className=\"text-muted-foreground\">\n          {message}\n        </Typography>\n      </CardContent>\n\n      {cardButton && (\n        <CardFooter className=\"flex flex-col items-center justify-center pt-10 pb-0\">\n          {cardButton}\n        </CardFooter>\n      )}\n    </Card>\n  );\n}\n\nconst ErrorLoaderButton = ({ ...props }: ButtonProps) => {\n  return <Button {...props} />;\n};\n\nconst ErrorLoaderImage = ({\n  className,\n  ...props\n}: ComponentProps<typeof Image>) => {\n  return (\n    <Image\n      {...props}\n      className={cn(\n        \"h-[200px] w-[200px] object-contain rounded-lg\",\n        className\n      )}\n    />\n  );\n};\n\nexport { ErrorLoaderButton, ErrorLoaderImage };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}