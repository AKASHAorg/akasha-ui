{
  "name": "error-loader",
  "type": "registry:ui",
  "registryDependencies": [
    "https://akasha-ui.pages.dev/r/styles/default/card.json",
    "https://akasha-ui.pages.dev/r/styles/default/image.json"
  ],
  "files": [
    {
      "path": "akasha-ui/error-loader.tsx",
      "content": "import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\nimport {\n  Image,\n  ImageFallback,\n  ImageRoot,\n} from \"@/registry/default/akasha-ui/image\";\nimport {\n  Card,\n  CardDescription,\n  CardFooter,\n  CardTitle,\n} from \"@/registry/default/ui/card\";\n\ninterface ErrorLoaderProps extends React.HTMLAttributes<HTMLDivElement> {\n  type:\n    | \"no-apps\"\n    | \"not-authenticated\"\n    | \"script-error\"\n    | \"page-not-found\"\n    | \"list-not-available\";\n  publicImgPath?: string;\n}\n\nconst ErrorLoaderTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <CardTitle ref={ref} className={cn(\"px-6 pt-4\", className)} {...props} />\n));\nErrorLoaderTitle.displayName = CardTitle.displayName;\n\nconst ErrorLoaderDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <CardDescription\n    ref={ref}\n    className={cn(\"pt-2 pb-6\", className)}\n    {...props}\n  />\n));\nErrorLoaderDescription.displayName = CardDescription.displayName;\n\nconst ErrorLoaderFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <CardFooter\n    ref={ref}\n    className={cn(\"justify-center\", className)}\n    {...props}\n  />\n));\nErrorLoaderFooter.displayName = CardFooter.displayName;\n\nconst ErrorLoader = React.forwardRef<HTMLDivElement, ErrorLoaderProps>(\n  ({ children, publicImgPath = \"/images\", type, className, ...props }, ref) => {\n    let imageSrc: string;\n\n    switch (type) {\n      case \"no-apps\":\n        imageSrc = `${publicImgPath}/no-apps-error.webp`;\n        break;\n      case \"not-authenticated\":\n        imageSrc = `${publicImgPath}/not-authenticated.webp`;\n        break;\n      case \"page-not-found\":\n        imageSrc = `${publicImgPath}/new404.webp`;\n        break;\n      case \"list-not-available\":\n        imageSrc = `${publicImgPath}/list-not-available.webp`;\n        break;\n      default:\n        imageSrc = `${publicImgPath}/general-error.webp`;\n        break;\n    }\n\n    return (\n      <Card ref={ref} className={cn(className)} {...props}>\n        <ImageRoot className={cn(\"flex justify-center px-6 pt-6\")}>\n          <Image\n            src={imageSrc}\n            alt=\"Error Image\"\n            className=\"size-[12.5rem] object-contain rounded-lg\"\n          />\n          <ImageFallback>Failed to load image</ImageFallback>\n        </ImageRoot>\n        {children}\n      </Card>\n    );\n  }\n);\nErrorLoader.displayName = Card.displayName;\n\nexport {\n  ErrorLoader,\n  ErrorLoaderTitle,\n  ErrorLoaderDescription,\n  ErrorLoaderFooter,\n};\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}