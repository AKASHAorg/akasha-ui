{
  "name": "inline-notification",
  "type": "registry:ui",
  "files": [
    {
      "path": "akasha-ui/inline-notification.tsx",
      "content": "import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { CircleAlert, CircleCheck, CircleX } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport { typographyVariants } from \"./typography\";\n\nconst inlineNotificationVariants = cva(\n  \"relative bg-background text-foreground w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4\",\n  {\n    variants: {\n      variant: {\n        info: \"\",\n        success: \"\",\n        destructive: \"\",\n      },\n    },\n    defaultVariants: {\n      variant: \"info\",\n    },\n  }\n);\n\nconst variantToIconMap = {\n  info: <CircleAlert size={16} className=\"text-primary\" />,\n  success: <CircleCheck size={16} className=\"text-success\" />,\n  destructive: <CircleX size={16} className=\"text-destructive\" />,\n};\n\nconst InlineNotification = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> &\n    VariantProps<typeof inlineNotificationVariants>\n>(({ className, variant = \"info\", children, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(inlineNotificationVariants({ variant }), className)}\n    {...props}\n  >\n    {variant && variantToIconMap[variant]}\n    {children}\n  </div>\n));\nInlineNotification.displayName = \"InlineNotification\";\n\nconst InlineNotificationTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\n      \"mb-2\",\n      typographyVariants({ variant: \"sm\" }),\n      \"font-bold\",\n      \"leading-none\",\n      className\n    )}\n    {...props}\n  />\n));\nInlineNotificationTitle.displayName = \"InlineNotificationTitle\";\n\nconst InlineNotificationDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"[&_p]:leading-relaxed\",\n      typographyVariants({ variant: \"sm\" }),\n      className\n    )}\n    {...props}\n  />\n));\nInlineNotificationDescription.displayName = \"InlineNotificationDescription\";\n\nexport {\n  InlineNotification,\n  InlineNotificationTitle,\n  InlineNotificationDescription,\n};\n",
      "type": "registry:ui",
      "target": ""
    }
  ],
  "tailwind": {
    "config": {
      "theme": {
        "extend": {
          "colors": {
            "success": {
              "DEFAULT": "hsl(var(--success)",
              "foreground": "hsl(var(--success-foreground)"
            },
            "warning": {
              "DEFAULT": "hsl(var(--warning)",
              "foreground": "hsl(var(--warning-foreground)"
            }
          }
        }
      }
    }
  },
  "cssVars": {
    "light": {
      "success": "160.1 84.1% 39.4%",
      "success-foreground": "151.8 81% 95.9%",
      "warning": "47.9 95.8% 53.1%",
      "warning-foreground": "54.5 91.7% 95.3%"
    }
  }
}