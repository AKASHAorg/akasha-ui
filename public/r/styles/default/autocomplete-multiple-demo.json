{
  "name": "autocomplete-multiple-demo",
  "type": "registry:example",
  "registryDependencies": [
    "https://akasha-ui.pages.dev/r/styles/default/autocomplete.json",
    "badge",
    "https://akasha-ui.pages.dev/r/styles/default/button.json"
  ],
  "files": [
    {
      "path": "examples/autocomplete-multiple-demo.tsx",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { X } from \"lucide-react\";\n\nimport {\n  Autocomplete,\n  AutocompleteItem,\n  AutocompleteList,\n  AutocompleteTrigger,\n} from \"@/registry/default/ui/autocomplete\";\nimport { Badge } from \"@/registry/default/ui/badge\";\nimport { Button } from \"@/registry/default/ui/button\";\n\n// Sample data for demonstrations\nconst frameworks = [\n  { value: \"next\", label: \"Next.js\" },\n  { value: \"sveltekit\", label: \"SvelteKit\" },\n  { value: \"nuxt\", label: \"Nuxt.js\" },\n  { value: \"remix\", label: \"Remix\" },\n  { value: \"astro\", label: \"Astro\" },\n  { value: \"wordpress\", label: \"WordPress\" },\n  { value: \"express\", label: \"Express.js\" },\n  { value: \"nest\", label: \"Nest.js\" },\n];\n\nexport default function AutoCompleteMultipleDemo() {\n  const [selectedValues, setSelectedValues] = useState<string[]>([]);\n\n  const handleValueChange = (value: string[]) => {\n    setSelectedValues(value);\n  };\n\n  const handleRemove = (valueToRemove: string) => {\n    setSelectedValues((prev) => prev.filter((item) => item !== valueToRemove));\n  };\n\n  return (\n    <div className=\"flex flex-col gap-2 items-center\">\n      <Autocomplete\n        multiple\n        value={selectedValues}\n        emptyMessage=\"No framework found.\"\n        onValueChange={handleValueChange}\n        className=\"w-56\"\n      >\n        <AutocompleteTrigger placeholder=\"Select frameworks...\" />\n        <AutocompleteList>\n          {frameworks.map((framework) => (\n            <AutocompleteItem key={framework.value} value={framework.value}>\n              {framework.label}\n            </AutocompleteItem>\n          ))}\n        </AutocompleteList>\n      </Autocomplete>\n\n      <div className=\"flex flex-wrap gap-2\">\n        {selectedValues.map((value) => {\n          const label =\n            frameworks.find((f) => f.value === value)?.label || value;\n          return (\n            <Badge key={value} variant=\"secondary\">\n              {label}\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"h-auto p-1 ml-2\"\n                onClick={() => handleRemove(value)}\n              >\n                <X className=\"h-3 w-3\" />\n              </Button>\n            </Badge>\n          );\n        })}\n      </div>\n\n      <p className=\"text-sm text-muted-foreground\">\n        Selected: {selectedValues.length ? selectedValues.join(\", \") : \"None\"}\n      </p>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}