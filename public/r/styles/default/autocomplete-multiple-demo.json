{
  "name": "autocomplete-multiple-demo",
  "type": "registry:example",
  "registryDependencies": [
    "autocomplete"
  ],
  "files": [
    {
      "path": "examples/autocomplete-multiple-demo.tsx",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { X } from \"lucide-react\";\n\nimport { Autocomplete, type Option } from \"@/registry/default/ui/autocomplete\";\nimport { Badge } from \"@/registry/default/ui/badge\";\nimport { Button } from \"@/registry/default/ui/button\";\n\n// Sample data for demonstrations\nconst frameworks = [\n  { value: \"next\", label: \"Next.js\" },\n  { value: \"sveltekit\", label: \"SvelteKit\" },\n  { value: \"nuxt\", label: \"Nuxt.js\" },\n  { value: \"remix\", label: \"Remix\" },\n  { value: \"astro\", label: \"Astro\" },\n  { value: \"wordpress\", label: \"WordPress\" },\n  { value: \"express\", label: \"Express.js\" },\n  { value: \"nest\", label: \"Nest.js\" },\n];\n\nexport default function AutoCompleteMultipleDemo() {\n  const [selectedValues, setSelectedValues] = useState<Option[]>([]);\n\n  const handleValueChange = (value: Option[] | undefined) => {\n    if (!value) return;\n    setSelectedValues(value);\n  };\n\n  const handleRemove = (valueToRemove: string) => {\n    setSelectedValues((prev) =>\n      prev.filter((item) => item.value !== valueToRemove)\n    );\n  };\n\n  return (\n    <div className=\"flex flex-col gap-2 items-center\">\n      <Autocomplete\n        options={frameworks}\n        value={selectedValues}\n        onValueChange={(value) => handleValueChange(value as Option[])}\n        placeholder=\"Select frameworks...\"\n        emptyMessage=\"No framework found.\"\n        multiple={true}\n        className=\"w-56\"\n      />\n      <div className=\"flex flex-wrap gap-2\">\n        {selectedValues.map((framework) => (\n          <Badge key={framework.value} variant=\"secondary\">\n            {framework.label}\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"h-auto p-1 ml-2\"\n              onClick={() => handleRemove(framework.value)}\n            >\n              <X className=\"h-3 w-3\" />\n            </Button>\n          </Badge>\n        ))}\n      </div>\n      <p className=\"text-sm text-muted-foreground\">\n        Selected:{\" \"}\n        {selectedValues.length\n          ? selectedValues.map((v) => v.label).join(\", \")\n          : \"None\"}\n      </p>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}