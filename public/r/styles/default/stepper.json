{
  "name": "stepper",
  "type": "registry:ui",
  "files": [
    {
      "path": "akasha-ui/stepper.tsx",
      "content": "import { forwardRef } from \"react\";\nimport { Check } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\ninterface StepperProps extends React.HTMLAttributes<HTMLElement> {\n  // find cirret element\n  currentStep: number;\n  numberOfSteps: number;\n}\n\n// Replace it\nconst DotIcon = ({ isActive }: { isActive: boolean }) => (\n  <svg\n    className={cn(\n      isActive ? \"text-primary\" : \"text-muted\",\n      \"transition-colors duration-300\"\n    )}\n    width=\"10\"\n    height=\"10\"\n    viewBox=\"0 0 10 10\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/3000/svg\"\n    aria-hidden=\"true\"\n  >\n    <circle cx=\"5\" cy=\"5\" r=\"5\" fill=\"currentColor\" />\n  </svg>\n);\n\n// forward ref\nexport const Stepper = forwardRef<HTMLElement, StepperProps>(\n  ({ currentStep, numberOfSteps, className, ...props }, ref) => {\n    return (\n      <nav\n        ref={ref}\n        className={cn(\"w-full\", className)}\n        {...props}\n        aria-label=\"Progress\"\n      >\n        <ol role=\"list\" className=\"flex items-center justify-between\">\n          {[...Array(numberOfSteps)].map((_, index) => {\n            const stepNumber = index + 1;\n            const isActive = stepNumber === currentStep;\n            const isCompleted = stepNumber < currentStep;\n            const isLast = index === numberOfSteps - 1;\n\n            return (\n              <li\n                key={stepNumber}\n                className={cn(\"relative\", !isLast && \"flex-1\")}\n                aria-current={isActive ? \"step\" : undefined}\n              >\n                {!isLast && (\n                  <div\n                    className={cn(\n                      \"absolute left-0 top-1/2 h-0.5 w-full -translate-y-1/2 transition-colors duration-300\",\n                      isCompleted ? \"bg-primary\" : \"bg-muted\"\n                    )}\n                    aria-hidden=\"true\"\n                  />\n                )}\n                <div\n                  className={cn(\n                    \"relative flex h-8 w-8 items-center justify-center rounded-full border-2 transition-all duration-300\",\n                    isActive\n                      ? \"border-primary bg-background\"\n                      : isCompleted\n                      ? \"border-primary bg-primary\"\n                      : \"border-muted bg-background\"\n                  )}\n                  aria-label={`Step ${stepNumber}`}\n                >\n                  {isCompleted ? (\n                    <Check className=\"text-primary-foreground transition-colors duration-300\" />\n                  ) : (\n                    <DotIcon isActive={isActive} />\n                  )}\n                </div>\n              </li>\n            );\n          })}\n        </ol>\n      </nav>\n    );\n  }\n);\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}