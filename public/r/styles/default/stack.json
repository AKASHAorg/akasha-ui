{
  "name": "stack",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/stack.tsx",
      "content": "import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst stackVariants = cva(\"flex divide-accent\", {\n  variants: {\n    justifyContent: {\n      start: \"justify-start\",\n      center: \"justify-center\",\n      end: \"justify-end\",\n      between: \"justify-between\",\n      evenly: \"justify-evenly\",\n      around: \"justify-around\",\n      stretch: \"justify-stretch\",\n    },\n    alignItems: {\n      start: \"items-start\",\n      center: \"items-center\",\n      end: \"items-end\",\n      baseline: \"items-baseline\",\n      stretch: \"items-stretch\",\n    },\n    direction: {\n      row: \"flex-row\",\n      rowReverse: \"flex-row-reverse\",\n      column: \"flex-col\",\n      columnReverse: \"flex-col-reverse\",\n    },\n  },\n  defaultVariants: {\n    direction: \"column\",\n  },\n});\n\nconst Stack = ({\n  className,\n  justifyContent,\n  alignItems,\n  direction = \"column\",\n  divider,\n  spacing,\n  ...props\n}: React.ComponentProps<\"div\"> &\n  VariantProps<typeof stackVariants> & {\n    spacing?: number;\n    divider?: boolean;\n  }) => {\n  return (\n    <div\n      data-slot=\"stack\"\n      className={cn(\n        stackVariants({\n          justifyContent,\n          alignItems,\n          direction,\n          className,\n        }),\n        spacing && `gap-${spacing}`,\n        divider && {\n          \"divide-y\": direction === \"column\" || direction === \"columnReverse\",\n          \"divide-x\": direction === \"row\" || direction === \"rowReverse\",\n        }\n      )}\n      {...props}\n    />\n  );\n};\n\nexport { Stack, stackVariants };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}